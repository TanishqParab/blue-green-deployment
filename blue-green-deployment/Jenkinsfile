pipeline {
    agent any

    environment {
        TF_WORKING_DIR = "/var/lib/jenkins/workspace/blue-green-deployment-job/blue-green-deployment"
        APP_DIR = "/var/lib/jenkins/workspace/blue-green-deployment-job/blue-green-deployment/app"
        TF_PLAN_FILE = "tfplan"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Initialize Terraform') {
            steps {
                script {
                    echo "Initializing Terraform"
                    dir(TF_WORKING_DIR) {
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Plan Infrastructure') {
            steps {
                script {
                    echo "Running Terraform plan"
                    dir(TF_WORKING_DIR) {
                        sh "terraform plan -out=${TF_PLAN_FILE}"
                    }
                }
            }
        }

        stage('Apply Infrastructure') {
            steps {
                script {
                    echo "Applying Terraform changes"
                    dir(TF_WORKING_DIR) {
                        sh "terraform apply -auto-approve ${TF_PLAN_FILE}"
                    }
                }
            }
        }

        stage('Deploy App') {
            steps {
                script {
                    echo "Deploying Python App"
                    dir(APP_DIR) {
                        sh "scp -i /var/lib/jenkins/workspace/blue-green-deployment-job/blue-green-key.pem app.py ec2-user@NEW_INSTANCE_IP:/home/ec2-user/"
                        sh "ssh -i /var/lib/jenkins/workspace/blue-green-deployment-job/blue-green-key.pem ec2-user@NEW_INSTANCE_IP 'python3 /home/ec2-user/app.py &'"
                    }
                }
            }
        }

        stage('Switch Traffic') {
            steps {
                script {
                    echo "Switching traffic to new environment"
                    dir(TF_WORKING_DIR) {
                        sh "terraform apply -auto-approve -var 'switch_traffic=true'"
                    }
                }
            }
        }

        stage('Wait Before Destroying Old Version') {
            steps {
                script {
                    echo "Waiting for traffic verification before destroying old environment"
                    sleep time: 60, unit: 'SECONDS'
                }
            }
        }

        stage('Destroy Old Version') {
            steps {
                script {
                    echo "Destroying old environment"
                    dir(TF_WORKING_DIR) {
                        sh "terraform destroy -auto-approve -var 'destroy_old=true'"
                    }
                }
            }
        }
    }
}
